version: "3.9"

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5434:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  graphql:
    build:
      context: .
      dockerfile: Dockerfile.graphql
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
    ports:
      - "8081:8081"
    depends_on:
      db:
        condition: service_healthy

  rest-api:
    build:
      context: .
      dockerfile: Dockerfile.rest
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy

  grpc:
    build:
      context: .
      dockerfile: Dockerfile.grpc
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
    ports:
      - "50051:50051"
    depends_on:
      db:
        condition: service_healthy

  migrate:
    image: postgres:13
    depends_on:
      db:
        condition: service_healthy
    entrypoint:
      [
        "sh",
        "-c",
        "until pg_isready -h ${DB_HOST} -U ${DB_USER}; do sleep 1; done; PGPASSWORD=${DB_PASSWORD} psql -h ${DB_HOST} -U ${DB_USER} -d ${DB_NAME} -f /migrations/create_orders_table.sql",
      ]
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./migrations:/migrations

volumes:
  pgdata:
